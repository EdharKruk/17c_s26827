import math

class SquareGenerator:
    def generate_squares(self, start, end):
        if end < start:
            raise ValueError("End of range must be greater than start")
        return [i**2 for i in range(start, end + 1)]

    def generate_square_roots(self, start, end):
        try:
            return [math.sqrt(i) for i in self.generate_squares(start, end)]
        except ValueError as e:
            print(e)
            return []

class CubicGenerator(SquareGenerator):
    def generate_squares(self, start, end):
        if start > end:
            raise ValueError("Start of range cannot be greater than end")
        return [i**3 for i in range(start, end + 1)]




if __name__ == "__main__":
    cubic_gen = CubicGenerator()
    try:
        print(cubic_gen.generate_squares(5, 1))
    except ValueError as e:
        print(e)

